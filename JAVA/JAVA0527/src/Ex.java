
public class Ex {
	public static void main(String[] args) {
		
		
		/*
		 * 생성자(Constuctor)
		 * - 클래스를 사용하여 인스턴스를 생성할 때 호출되는 메서드 형태
		 * - 주로 인스턴스 변수를 초기화 하는 용도 또는 인스턴스 생성 시 초기에 수행할 작업 기술
		 * - 메서드와 차이점
		 *   1) 선언부에 리턴타입이 없음 (리턴값이 없는게 아니라 리턴타입을 기술하지 않음)
		     2) 생성자 이름이 클래스명과 동일함
		      - 개발자가 생성자를 하나도 정의하지 않으면 컴파일러에 의해 자동으로 기본 생성자 생성
		        => 단, 생성자를 하나라도 정의할 경우 기본 생성자는 자동 생성되지 않는다.
		      - 파라미터가 없는 생성자와 파라미터가 있는 생성자 모두 정의 가능 (= 메서드와 동일)
		      
		   < 생성자 정의 기본 문법>
		   [접근제한자] 클래스명([파라미터변수선언..]) {
		   			    생성자 호출 시점 (인스턴스 생성 시점)에 수행할 작업들 (= 인스턴스 변수 초기화등)
		   	}
		*/
		
		
		Student std = new Student();
		// => new 뒤의 Student() 코드 부분이 생성자 Student()를 생성하는 코드
		// std.id = 20201111;
		// std.name = "홍길동";
		std.name = "이순신";
		System.out.println("id : " + std.id + ", 이름 : "+ std.name);
		
		System.out.println("------------------------------------");
		
		Student std2 = new Student();
		System.out.println("id : " + std2.id + ", 이름 : "+ std2.name);
	}
}


class Student {
	// 클래스 내에서 별도의 생성자를 정의하지 않으면
	// 자바 컴파일러에 의해 기본 생성자가 자동으로 생성됨
	
	// 사용자가 직접 기본 생성자를 정의하여 인스턴스 변수를 초기화하는 경우
	public Student() {
		// 생성자 내에서 인스턴스 변수 초기화 가능함
		// 인스턴스 생성 시 생성자가 호출되면 자동으로 초기화가 수행되므로 모든 
		// 모든 student 클래스의 인스턴스는 시작 시 동일한 값을 갖는다.
		id = 20201111;
		name = "홍길동";
	}
	
	// public Student() {} // 기본 생성자 형식
	int id;
	String name;
}
