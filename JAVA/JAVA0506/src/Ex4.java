
public class Ex4 {
	public static void main(String[] args) {
		/* 
		 * 증감연산자(++,--)
		 * - 변수의 값을 1만큼 증가시키거나 감소시키는 연산자
		 * - 변수의 앞쪽(좌측)에 붙을 경우 전위연산자(선행연산자)라고 하며,
		 * 	  변수 뒷쪽(우측)에 붙을 경우 후위연산자(후행연산자)라고 함
		 *   => 다른 연산자와 함께 사용될 경우 위치에 따라 연산 순서가 달라지므로 주의!
		 *   1) 전위연산자(선행연산자) : 다른 연산보다 먼저 변수 값을 증감시킨 후 다른 연산 수행
		 *   2) 후위연산자(후행연산자) : 다른 연산을 먼저 수행한 후, 변수 값을 증가시킴
		 *   
		 *   그러면 이걸 왜 사용할까?
		 *   1. 대입연산자를 조합하여 1 증가시키는 연산과 결과적으로 수치변화는 동일하지만
		 *   대입연산자와 산술연산자를 사용하는 연산보다 연산 속도가 빠름\
		 *   2. 형변환 필요 없음
		 */
		
		int i = 5;
		
		i++; // 현재 i값을 1 증가시킴 (5->6)
		System.out.println(i); //i값 출력(6)
		
		++i; // 현재 i값을 1 증가시킴 (6->7)
		System.out.println(i); //i값 출력(7)
		
		// 증감연산자가 다른 연산자와 함께 사용될 경우 위치에 따라 연산 순서가 달라짐
		int j = ++i; // 선행연산자이므로 i값을 먼저 1 증가시킨 후, 증가된 값을 j에 전달
		// i 값이 7 -> 8 로 증가된 후 j에 8이 전달됨 (i = 8, j = 8)
		
		System.out.println("i = " + i + ", j = " + j);
		
		System.out.println(j++);
		// 후행연산자이므로 j값을 먼저 출력문에 사용한 후, j값을 1 증가시킴
		// j가 8 일때 출력된 후, j 값이 8 -> 9 로 증가됨
		
		System.out.println(--j);
		// 선행연산자이므로 j값을 먼저 1 감소 시킨 후 출력.
		
		System.out.println("-------------------------");
		
		int x = 5;
		int y = ++x ; // 선행연산자이므로 x값을 먼저 1 증가 시킨 후, x값을 y에 전달
		System.out.println(x + ", " + y);
		
		int x2 = 5;
		int y2 = x2++;
		System.out.println(x2 + ", " + y2); // 후행연산자이므로 x값을 먼저 y2에 전달한 후 x2값을 1 증가시킴
														// x2 = 6, y2 = 5;
		
		
		System.out.println("---------------------------------");
		
		char ch = 'A';
		
		// 1. 산술연산자와 대입연산자를 조합하여 ch 값을 1 증가시키는 방법
		ch = (char)(ch + 1); // 형변환 연산자 필요
		System.out.println(ch);
		
		// 2. 복합 대입연산자를 사용하여 ch 값을 1 증가시키는 방법
		ch += 1; // 형변환 필요없음
		System.out.println(ch);

		// 3. 증감연산자를 사용하여 ch 값을 1 증가시키는 방법
		ch++; // 형변환 필요없음
		System.out.println(ch);

		

	}
}
